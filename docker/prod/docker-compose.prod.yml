version: '3.8'

x-resource-limits: &default-resource-limits
  deploy:
    resources:
      limits:
        cpus: '0.50'
        memory: 512M
      reservations:
        cpus: '0.25'
        memory: 256M

services:
  nginx-proxy:
    image: nginx:latest
    deploy:
      resources:
        limits:
          cpus: '0.30'
          memory: 256M
        reservations:
          cpus: '0.10'
          memory: 128M
    volumes:
      - /etc/nginx/sites-available/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/home/app/web/app/static:ro
      - media_volume:/home/app/web/app/media:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    ports:
      - "80:80"
      - "443:443"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      - django-app
      - airflow-webserver
      - streamlit-app
    networks:
      - app_network

  django-app:
    image: ghcr.io/leobitto/arnia-django:latest
    <<: *default-resource-limits
    expose:
      - 8000
    env_file:
      - /opt/config/django.conf
    volumes:
      - static_volume:/home/app/web/app/static
      - media_volume:/home/app/web/app/media
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      postgres-bronze:
        condition: service_healthy
      postgres-silver:
        condition: service_healthy
      postgres-gold:
        condition: service_healthy
    command: gunicorn app.base.wsgi:application --bind 0.0.0.0:8000 --workers 4 --threads 2 --timeout 120 --keep-alive 65
    restart: unless-stopped
    networks:
      - app_network

  django-init:
    image: ghcr.io/leobitto/arnia-django:latest
    env_file:
      - /opt/config/django.conf
    volumes:
      - static_volume:/home/app/web/app/static
      - media_volume:/home/app/web/app/media
    depends_on:
      postgres-bronze:
        condition: service_healthy
      postgres-silver:
        condition: service_healthy
      postgres-gold:
        condition: service_healthy
    networks:
      - app_network
    command: >
      bash -c "
      cd app &&
      python manage.py makemigrations --noinput &&
      python manage.py migrate --noinput &&
      python manage.py migrate --noinput --database=silver &&
      python manage.py migrate --noinput --database=gold &&
      python manage.py collectstatic --noinput --clear &&
      python create_superuser.py
      "

  streamlit-app:
    image: ghcr.io/leobitto/arnia-streamlit:latest
    <<: *default-resource-limits
    expose:
      - 8501
    env_file:
      - /opt/config/streamlit.conf
      - /opt/config/databases/gold.conf
    volumes:
      - streamlit_data:/app/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      postgres-gold:
        condition: service_healthy
    networks:
      - app_network

  airflow-webserver:
    image: ghcr.io/leobitto/arnia-airflow:latest
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    env_file:
      - /opt/config/airflow-db.conf
      - /opt/config/airflow.conf
      - /opt/config/django.conf
    environment:
      - AIRFLOW_CONN_POSTGRES_BRONZE=postgres://$${BRONZE_POSTGRES_USER}:$${BRONZE_POSTGRES_PASSWORD}@postgres-bronze:5432/$${BRONZE_POSTGRES_DB}
      - AIRFLOW_CONN_POSTGRES_SILVER=postgres://$${SILVER_POSTGRES_USER}:$${SILVER_POSTGRES_PASSWORD}@postgres-silver:5432/$${SILVER_POSTGRES_DB}
      - AIRFLOW_CONN_POSTGRES_GOLD=postgres://$${GOLD_POSTGRES_USER}:$${GOLD_POSTGRES_PASSWORD}@postgres-gold:5432/$${GOLD_POSTGRES_DB}
    volumes:
      - airflow_dags:/opt/airflow/dags:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    expose:
      - 8080
    command: airflow webserver
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped
    depends_on:
      - airflow-db
    networks:
      - app_network

  airflow-scheduler:
    image: ghcr.io/leobitto/arnia-airflow:latest
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    env_file:
      - /opt/config/airflow-db.conf
      - /opt/config/airflow.conf
      - /opt/config/django.conf
    environment:
      - AIRFLOW_CONN_POSTGRES_BRONZE=postgres://$${BRONZE_POSTGRES_USER}:$${BRONZE_POSTGRES_PASSWORD}@postgres-bronze:5432/$${BRONZE_POSTGRES_DB}
      - AIRFLOW_CONN_POSTGRES_SILVER=postgres://$${SILVER_POSTGRES_USER}:$${SILVER_POSTGRES_PASSWORD}@postgres-silver:5432/$${SILVER_POSTGRES_DB}
      - AIRFLOW_CONN_POSTGRES_GOLD=postgres://$${GOLD_POSTGRES_USER}:$${GOLD_POSTGRES_PASSWORD}@postgres-gold:5432/$${GOLD_POSTGRES_DB}
    volumes:
      - airflow_dags:/opt/airflow/dags:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: airflow scheduler
    healthcheck:
      test: ["CMD", "airflow", "jobs", "check", "--job-type", "SchedulerJob", "--allow-multiple"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped
    depends_on:
      - airflow-db
    networks:
      - app_network

  airflow-init:
    image: ghcr.io/leobitto/arnia-airflow:latest
    env_file:
      - /opt/config/airflow-db.conf
      - /opt/config/airflow.conf
      - /opt/config/django.conf
    environment:
      - AIRFLOW_CONN_POSTGRES_BRONZE=postgres://$${BRONZE_POSTGRES_USER}:$${BRONZE_POSTGRES_PASSWORD}@postgres-bronze:5432/$${BRONZE_POSTGRES_DB}
      - AIRFLOW_CONN_POSTGRES_SILVER=postgres://$${SILVER_POSTGRES_USER}:$${SILVER_POSTGRES_PASSWORD}@postgres-silver:5432/$${SILVER_POSTGRES_DB}
      - AIRFLOW_CONN_POSTGRES_GOLD=postgres://$${GOLD_POSTGRES_USER}:$${GOLD_POSTGRES_PASSWORD}@postgres-gold:5432/$${GOLD_POSTGRES_DB}
    volumes:
      - airflow_dags:/opt/airflow/dags:ro
    command: >
      bash -c "airflow db init &&
               airflow db migrate &&
               airflow users create
                --username $${ADMIN_USERNAME}
                --password $${ADMIN_PASSWORD}
                --firstname $${ADMIN_FIRSTNAME}
                --lastname $${ADMIN_LASTNAME}
                --role Admin
                --email $${ADMIN_MAIL}
               "
    depends_on:
      - airflow-db
    networks:
      - app_network

  postgres-bronze:
    image: postgres:15
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    volumes:
      - postgres_data_bronze:/var/lib/postgresql/data/
    env_file:
      - /opt/config/databases/bronze.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app_network
    command: postgres -c shared_buffers=256MB -c max_connections=200

  postgres-silver:
    image: postgres:15
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    volumes:
      - postgres_data_silver:/var/lib/postgresql/data/
    env_file:
      - /opt/config/databases/silver.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app_network
    command: postgres -c shared_buffers=256MB -c max_connections=200

  postgres-gold:
    image: postgres:15
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 1G
    volumes:
      - postgres_data_gold:/var/lib/postgresql/data/
    env_file:
      - /opt/config/databases/gold.conf
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app_network
    command: postgres -c shared_buffers=256MB -c max_connections=200

  airflow-db:
    image: postgres:13
    deploy:
      resources:
        limits:
          cpus: '0.75'
          memory: 1G
        reservations:
          cpus: '0.25'
          memory: 512M
    volumes:
      - airflow_metadata:/var/lib/postgresql/data
    env_file:
      - /opt/config/airflow-db.conf
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    restart: unless-stopped
    networks:
      - app_network
    command: postgres -c shared_buffers=128MB -c max_connections=100

volumes:
  static_volume:
  media_volume:
  postgres_data_bronze:
  postgres_data_silver:
  postgres_data_gold:
  airflow_metadata:
  airflow_dags:
  streamlit_data:

networks:
  app_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16