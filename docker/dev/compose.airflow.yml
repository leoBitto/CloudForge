services:
  airflow-db:
    image: postgres:13
    env_file:
      - ../../src/airflow/config/airflow-db.conf
    volumes:
      - airflow_metadata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 10s
      retries: 5
      start_period: 5s
    networks:
      - app_network

  airflow-webserver:
    build:
      context: ../../src/airflow
      dockerfile: Dockerfile
    image: airflow-app:latest
    env_file:
      - ../../src/airflow/config/airflow-db.conf
      - ../../src/airflow/config/airflow.conf
      - ../../src/db/config/gold.conf
    environment:
      - AIRFLOW_CONN_POSTGRES_GOLD= postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@$${GOLD_SQL_HOST}:$${SQL_PORT}/$${POSTGRES_DB}
    volumes:
      - ../../src/airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock
    expose:
      - 8080
    command: bash -c  "airflow webserver"
    depends_on:
      - airflow-db
    networks:
      - app_network

  airflow-scheduler:
    build:
      context: ../../src/airflow
      dockerfile: Dockerfile
    image: airflow-app:latest
    env_file:
      - ../../src/airflow/config/airflow-db.conf
      - ../../src/airflow/config/airflow.conf
      - ../../src/db/config/gold.conf
    environment:
      - AIRFLOW_CONN_POSTGRES_GOLD= postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@$${GOLD_SQL_HOST}:$${SQL_PORT}/$${POSTGRES_DB}
    volumes:
      - ../../src/airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock
    command: bash -c "airflow scheduler"
    depends_on:
      - airflow-db
    networks:
      - app_network

  airflow-init:
    build:
      context: ../../src/airflow
      dockerfile: Dockerfile
    image: airflow-app:latest
    env_file:
      - ../../src/airflow/config/airflow-db.conf
      - ../../src/airflow/config/airflow.conf
      - ../../src/db/config/gold.conf
    environment:
      - AIRFLOW_CONN_POSTGRES_GOLD= postgres://$${POSTGRES_USER}:$${POSTGRES_PASSWORD}@$${GOLD_SQL_HOST}:$${SQL_PORT}/$${POSTGRES_DB}
    volumes:
      - ../../src/airflow/dags:/opt/airflow/dags
      - /var/run/docker.sock:/var/run/docker.sock
    command: >
      bash -c " airflow db init &&
                airflow db migrate &&
                airflow users create \\
                 --username $$ADMIN_USERNAME \\
                 --password $$ADMIN_PASSWORD \\
                 --firstname $$ADMIN_FIRSTNAME \\
                 --lastname $$ADMIN_LASTNAME \\
                 --role Admin \\
                 --email $$ADMIN_MAIL
                 "
    depends_on:
      - airflow-db
      - postgres-gold
    networks:
      - app_network

volumes:
  airflow_metadata: